local MOVEMENT_SPEED = 150

go.property("input", vmath.vector3(0, 0, 0))
go.property("is_paused", false)

function init(self)
	msg.post(".", "acquire_input_focus")
end

function final(self)
	msg.post(".", "release_input_focus")
end

function update(self, dt)
  if self.is_paused == false then
  	local pos = go.get_position()
	local input = self.input
	if vmath.length_sqr(self.input) > 1 then
		input = vmath.normalize(self.input)
	end
	go.set_position(pos + (input * MOVEMENT_SPEED * dt))
  end

	self.input.x = 0
	self.input.y = 0
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	if action_id == hash('up') then
		self.input.y = 1
	elseif action_id == hash('down') then
		self.input.y = -1
	elseif action_id == hash('right') then
		self.input.x = 1
	elseif action_id == hash('left') then
		self.input.x = -1
	elseif action_id == nil then
		local pos = go.get_position()
		local rad = math.atan2(action.y - pos.y, action.x - pos.x)
		local rot = vmath.quat_rotation_z(rad)
		go.set_rotation(rot)
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Remove this function if not needed
end
